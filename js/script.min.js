const global={currentPage:window.location.pathname,api:"https://api.themoviedb.org/3/",headers:{accept:"application/json",Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMzY2NzhjMGE1NzIyZGM1NWI5MzlmMmFjYTkyZWIyYiIsInN1YiI6IjY2MWQwZGQyNmY0M2VjMDE4NzVkNmE4YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.prZBb5iVDlIACrMro8_1kEaFDTNlWhip_HoRTxqgnkY",},media:{genre:"",page:1,totalPages:1,},searching:{type:"",term:"",totalResults:0,},};async function fetchingTMDB(endpoint,queries=""){const response=await fetch(`${global.api}${endpoint}${queries}`,{method:"GET",headers:global.headers,});const data=await response.json();toggleSpinner(!1);return data}
async function displayPopularMovies(){const{results,page,total_pages}=await fetchingTMDB("movie/popular",`?page=${global.media.page}`);paginationSetup(page,total_pages);const movieList=document.getElementById("popular-movies");movieList.innerHTML="";results.forEach((movie)=>{const card=document.createElement("div");const{id,original_title:movieTitle,release_date,poster_path:moviePoster,overview,}=movie;card.classList.add("card");card.innerHTML=`
        <div class="card-front">
        ${
            moviePoster
                ? `<img
src="https://image.tmdb.org/t/p/w500${moviePoster}"
class="card-img-top"
alt="${movieTitle}"/>`
                : `<img
src="../images/no-image.jpg"
class="card-img-top"
alt="${movieTitle}"/>`
        }
        </div>
        <div class="card-back">
            <h4 class="card-title">${movieTitle}</h4>
            <p class="card-text">
                <small class="text-muted">Release: ${release_date.slice(
                    0,
                    4
                )}</small>
            </p>
            <p class="card-overview">
            ${overview
                .split(" ")
                .splice(0, 20)
                .join(
                    " "
                )}...<a href="movie-details.html?id=${id}" class="see-more">
            Details
            </a>
            </p>
            </div>
            `;movieList.appendChild(card)})}
async function displayMovieDetails(){const movieId=window.location.search.split("=")[1];const movieDetailsItem=document.getElementById("movie-details");const div=document.createElement("div");const{backdrop_path:backGround,original_title:movieName,overview:details,poster_path:moviePoster,release_date,vote_average:rating,genres,homepage,budget,revenue,runtime,status,production_companies,}=await fetchingTMDB(`movie/${movieId}`);displayBackdrop(backGround);div.innerHTML=`
        <div class="details-top">
        ${
            moviePoster === null
                ? `<img
src="../images/no-image.jpg"
class="card-img-top"
alt="no image"/>`
                : `<img
src="https://image.tmdb.org/t/p/w500${moviePoster}"
class="card-img-top"
alt="${movieName}"/>`
        }
            <div>
                <h2>${movieName}</h2>
                <p>
                    <i class="fas fa-star text-primary"></i>
                    ${rating} / 10
                </p>
                <p class="text-muted">Release Date: ${release_date}</p>
                <p>${details}</p>
                <h5>Genres</h5>
                <ul class="list-group">
                    ${genres.forEach((gen) => {
                        `<li>${gen.name}</li>`;
                    })}
                </ul>
                <a href="${homepage}" target="_blank" class="btn"
                    >Visit Movie Homepage</a
                >
            </div>
        </div>
        <div class="details-bottom">
            <h2>Movie Info</h2>
            <ul>
                <li><span class="text-secondary">Budget:</span> $${addComa(
                    budget
                )}</li>
                <li>
                    <span class="text-secondary">Revenue:</span> $${addComa(
                        revenue
                    )}
                </li>
                <li>
                    <span class="text-secondary">Runtime:</span> ${runtime}
                    minutes
                </li>
                <li><span class="text-secondary">Status:</span> ${status}</li>
            </ul>
            <h4>Production Companies</h4>
            <div class="list-group">

            </div>
            ${production_companies.map((com) => `${com.name}`).join(" , ")}
        </div>
    `;movieDetailsItem.appendChild(div)}
async function displayPopularShows(){const{results,page,total_pages}=await fetchingTMDB("tv/popular",`?page=${global.media.page}`);paginationSetup(page,total_pages);const showList=document.getElementById("popular-shows");showList.innerHTML="";results.forEach((show)=>{const card=document.createElement("div");const{id,original_name:showTitle,first_air_date,poster_path:showPoster,overview,}=show;card.classList.add("card");card.innerHTML=`
        <div class="card-front">
        ${
            showPoster
                ? `<img
src="https://image.tmdb.org/t/p/w500${showPoster}"
class="card-img-top"
alt="${showTitle}"/>`
                : `<img
src="../images/no-image.jpg"
class="card-img-top"
alt="${showTitle}"/>`
        }
        </div>
        <div class="card-back">
            <h4 class="card-title">${showTitle}</h4>
            <p class="card-text">
                <small class="text-muted">Release: ${first_air_date.slice(
                    0,
                    4
                )}</small>
            </p>
            <p class="card-overview">
            ${overview
                .split(" ")
                .splice(0, 20)
                .join(
                    " "
                )}...<a href="tv-details.html?id=${id}" class="see-more">
            Details
            </a>
            </p>
        </div>
        `;showList.appendChild(card)})}
async function displayTvDetails(){const tvID=window.location.search.split("=")[1];const tvDetailsItem=document.getElementById("show-details");const div=document.createElement("div");const{backdrop_path:backGround,original_name:showName,number_of_episodes:totalEpisodes,overview:details,poster_path:showPoster,first_air_date:releaseDate,last_episode_to_air:lastEpisode,vote_average:rating,genres,homepage,status,production_companies,}=await fetchingTMDB(`tv/${tvID}`);displayBackdrop(backGround);div.innerHTML=`
        <div class="details-top">
            <div>
            ${
                showPoster === null
                    ? `<img
src="../images/no-image.jpg"
class="card-img-top"
alt="no image"/>`
                    : `<img
src="https://image.tmdb.org/t/p/w500${showPoster}"
class="card-img-top"
alt="${showName}"/>`
            }
            </div>
            <div>
                <h2>${showName}</h2>
                <p>
                    <i class="fas fa-star text-primary"></i>
                    ${rating} / 10
                </p>
                <p class="text-muted">Release Date: ${releaseDate}</p>
                <p>${details}</p>
                <h5>Genres</h5>
                <ul class="list-group">
                    ${genres
                        .map((gen) => {
                            `<li>${gen.name}</li>`;
                        })
                        .join("")}
                </ul>
                <a href="${homepage}" target="_blank" class="btn"
                    >Visit Show Homepage</a
                >
            </div>
        </div>
        <div class="details-bottom">
            <h2>Show Info</h2>
            <ul>
                <li>
                    <span class="text-secondary">Number Of Episodes:</span>
                    ${totalEpisodes}
                </li>
                <li>
                    <span class="text-secondary">Last Episode To Air:</span>
                    ${lastEpisode.name}
                </li>
                <li><span class="text-secondary">Status:</span> ${status}</li>
            </ul>
            <h4>Production Companies</h4>
            <div class="list-group">
            ${production_companies.map((com) => `${com.name}`).join(" , ")}
            </div>
        </div>
    `;tvDetailsItem.appendChild(div)}
async function search(){const queryString=window.location.search;const urlSearchParams=new URLSearchParams(queryString);global.searching.type=urlSearchParams.get("type");global.searching.term=urlSearchParams.get("search-term");global.searching.type==="tv"&&document.getElementById("tv").toggleAttribute("checked",document.getElementById("movie").hasAttribute("checked"));if(global.searching.term!==""&&global.searching.term!==null){const{results,total_pages,page,total_results}=await searchApiData();paginationSetup(page,total_pages);global.searching.totalResults=total_results;if(results.length===0){showALert("not matched result","error");return}
displaySearchResults(results);document.querySelector("#search-term").value=""}else{showALert("Please enter term","error")}}
function displaySearchResults(results){const searchWrapper=document.getElementById("search-results");searchWrapper.innerHTML="";results.forEach((result)=>{const{id,original_title,original_name,overview,poster_path,release_date,first_air_date,}=result;const card=document.createElement("div");card.classList.add("card");card.innerHTML=`
            <div class="card-front">
                ${
                    poster_path
                        ? `<img
src="https://image.tmdb.org/t/p/w500${poster_path}"
class="card-img-top"
alt="${original_title || original_name}"/>`
                        : `<img
src="../images/no-image.jpg"
class="card-img-top"
alt="${original_title || original_name}"/>`
                }
            </div>
            <div class="card-back">
                <h4 class="card-title">${original_title || original_name}</h4>
                <p class="card-text">
                    <small class="text-muted"
                        >Release: ${
                            (release_date === undefined
                                ? `xxxx`
                                : release_date.slice(0, 4)) ||
                            (first_air_date === undefined
                                ? `xxxx`
                                : first_air_date.slice(0, 4))
                        }</small
                    >
                </p>
                <p class="card-overview">
                    ${overview.split(" ").splice(0, 20).join(" ")}...<a
                        href="${global.searching.type}-details.html?id=${id}"
                        class="see-more"
                    >
                        Details
                    </a>
                </p>
            </div>
        `;document.getElementById("search-results-heading").innerHTML=`
        <h2>
        ${results.length}
        of ${global.searching.totalResults} results for (${global.searching.term})
        </h2>
        `;searchWrapper.appendChild(card)})}
async function searchApiData(){toggleSpinner(!0);const response=await fetch(`${global.api}search/${global.searching.type}?query=${global.searching.term}&page=${global.media.page}`,{method:"GET",headers:global.headers,});const data=await response.json();toggleSpinner(!1);return data}
function showALert(message,className){const alert=document.createElement("div");const txt=document.createTextNode(message);alert.classList.add("alert",className);alert.appendChild(txt);document.querySelector("#alert").appendChild(alert);toggleSpinner(!1);setTimeout(()=>{alert.classList.add("hide")},1000)}
function paginationSetup(page,total_pages){global.media.page=page;global.media.totalPages=total_pages>=500?500:total_pages;displayPageNumber()}
function displayPageNumber(){const ul=document.querySelector(".pagination");ul.innerHTML="";const anchorPrev=document.createElement("a");const anchorNext=document.createElement("a");const anchorFirst=document.createElement("a");const anchorLast=document.createElement("a");const prev=document.createElement("li");const next=document.createElement("li");const first=document.createElement("li");const last=document.createElement("li");prev.appendChild(anchorPrev);next.appendChild(anchorNext);first.appendChild(anchorFirst);last.appendChild(anchorLast);anchorPrev.innerText="Prev";anchorNext.innerText="Next";anchorFirst.innerText="<<";anchorLast.innerText=">>";first.setAttribute("data-locate",1);last.setAttribute("data-locate",global.media.totalPages);prev.setAttribute("id","prev");next.setAttribute("id","next");ul.appendChild(prev);ul.appendChild(first);let startPage=Math.max(1,global.media.page-4);let endPage=Math.min(global.media.totalPages,startPage+4);if(endPage-startPage<5){startPage=Math.max(1,endPage-4)}
for(let i=startPage;i<=endPage;i++){const li=document.createElement("li");const anchor=document.createElement("a");const text=document.createTextNode(i);anchor.appendChild(text);li.setAttribute("data-page",i);li.appendChild(anchor);ul.appendChild(li)}
ul.appendChild(last);ul.appendChild(next);ul.addEventListener("click",eventElement);paginationEffect()}
function eventElement(e){const elementID=e.target.parentElement.id||e.target.parentElement.dataset.page||e.target.parentElement.dataset.locate;switch(elementID){case "next":if(global.media.page<=global.media.page){global.media.page++;displayPageNumber()}
break;case "prev":if(global.media.page>1){global.media.page--;displayPageNumber()}
break;case elementID:global.media.page=elementID;break;default:console.log("Error");break}
invokeGenreDisplay()}
function invokeGenreDisplay(){switch(global.media.genre){case "movies":displayPopularMovies();break;case "tv-show":displayPopularShows();break;case "searching":search();break;default:break}}
function paginationEffect(){const allLi=document.querySelectorAll(".pagination li[data-page]");allLi.forEach((li)=>{li.classList.toggle("currant",Number(li.dataset.page)===global.media.page)})}
function toggleSpinner(condition){document.querySelector(".spinner").classList.toggle("hidden",!condition)}
async function displaySlider(endpoint,type){const{results}=await fetchingTMDB(endpoint);const data=results.map((obj)=>{return{id:obj.id,img:obj.poster_path,name:obj.original_title,rate:obj.vote_average,}});data.forEach((item)=>{const swiperDiv=document.createElement("div");swiperDiv.classList.add("swiper-slide");swiperDiv.innerHTML=` <a href="${type}-details.html?id=${item.id}">
                <img
                    src="https://image.tmdb.org/t/p/w500${item.img}"
                    alt="Movie Title"
                />
            </a>
            <h4 class="swiper-rating">
                <i class="fas fa-star text-secondary"></i> ${item.rate} / 10
            </h4>`;document.querySelector(".swiper-wrapper").appendChild(swiperDiv)});initSwiper()}
function initSwiper(){const swipe=new Swiper(".swiper",{slidesPerView:1,spaceBetween:30,freeMode:!0,loop:!0,autoplay:{delay:4000,disable:!1,},breakpoints:{500:{slidesPerView:2,},700:{slidesPerView:3,},1200:{slidesPerView:4,},},})}
function displayBackdrop(backdropPath){const overlayDiv=document.createElement("div");overlayDiv.style.backgroundImage=`url(https://image.tmdb.org/t/p/original/${backdropPath})`;overlayDiv.classList.add("overlay");if(global.media.genre==="movie-details"){document.getElementById("movie-details").appendChild(overlayDiv)}else if(global.media.genre==="tv-details"){document.getElementById("show-details").appendChild(overlayDiv)}}
function highlightActiveLink(){const pages=document.querySelectorAll(".nav-link");pages.forEach((page)=>{if(page.getAttribute("href")===global.currentPage){page.classList.add("active")}})}
function addComa(number){return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}
function init(){switch(global.currentPage){case "/":case "/index.html":global.media.genre="movies";displaySlider("trending/movie/week","movie");displayPopularMovies();break;case "/shows.html":global.media.genre="tv-show";displaySlider("trending/tv/week","tv");displayPopularShows();break;case "/movie-details.html":global.media.genre="movie-details";displayMovieDetails();break;case "/tv-details.html":global.media.genre="tv-details";displayTvDetails();break;case "/search.html":global.media.genre="searching";search();displayPageNumber();break;default:console.log("Error Page Not Found");break}
highlightActiveLink()}
document.addEventListener("DOMContentLoaded",init)